import pandas as pd
import matplotlib.pyplot as plt

# Using the provided data to create a DataFrame
data_dict = {
    "Y": [0, 2, 5, 7, 10, 12, 15, 17, 20, 22, 25, 27, 30, 32, 35, 37, 40, 42, 45, 47, 50, 52, 55, 57, 60, 62, 65, 67, 70, 72, 75, 77, 80, 82, 85, 87, 90, 92, 95, 97, 100, 102, 105, 107, 110, 112, 115, 117, 120, 122, 125, 127, 130, 132, 135, 137, 140, 142, 145, 147, 150, 152, 155, 157, 160, 162, 165, 167, 170, 172, 175, 177, 180, 182, 185, 187, 190, 192, 195, 197, 200, 202, 205, 207, 210, 212, 215, 217, 220, 222, 225, 227, 230, 232, 235, 237, 240, 242, 245, 247, 250, 252, 255, 257, 260, 262, 265, 267, 270, 272, 275, 277, 280, 282, 285, 287, 290, 292, 295, 297, 300, 302, 305, 307, 310, 312, 315, 317, 320, 322, 325, 327, 330, 332, 335, 337, 340, 342, 345, 347, 350, 352, 355, 357, 360],
    "X=0": [804, 816, 805, 803, 771, 773, 720, 685, 642, 630, 620, 563, 576, 558, 482, 427, 409, 378, 353, 310, 307, 252, 250, 210, 158, 136, 110, 95, 87, 64, 54, 23, 21, 26, 22, 24, 21, 27, 25, 43, 34, 66, 77, 111, 116, 156, 156, 181, 188, 236, 276, 302, 312, 366, 380, 407, 439, 443, 475, 527, 577, 602, 626, 645, 644, 634, 703, 684, 679, 727, 710, 710, 743, 749, 702, 692, 689, 629, 608, 644, 656, 607, 571, 582, 489, 528, 468, 448, 384, 369, 350, 326, 241, 259, 217, 194, 162, 139, 106, 98, 82, 66, 52, 36, 24, 21, 19, 14, 12, 23, 29, 36, 55, 62, 76, 108, 138, 178, 192, 228, 231, 273, 255, 286, 356, 397, 377, 413, 455, 474, 499, 539, 511, 585, 584, 630, 623, 667, 655, 633, 652, 697, 706, 668, 618],
    "45°": [356, 376, 424, 495, 458, 488, 571, 554, 589, 630, 656, 677, 669, 710, 793, 733, 740, 764, 808, 729, 787, 823, 729, 729, 744, 730, 737, 675, 708, 639, 644, 549, 553, 507, 508, 452, 454, 418, 413, 374, 315, 341, 259, 235, 226, 169, 165, 135, 104, 105, 74, 80, 63, 65, 37, 43, 33, 45, 48, 46, 53, 80, 90, 105, 116, 136, 141, 194, 193, 257, 264, 261, 305, 367, 371, 396, 428, 473, 516, 593, 567, 569, 582, 602, 667, 650, 691, 674, 742, 706, 709, 757, 673, 760, 703, 704, 731, 673, 705, 640, 671, 578, 660, 631, 564, 555, 508, 463, 425, 395, 401, 351, 338, 314, 279, 229, 247, 216, 172, 149, 123, 94, 86, 86, 59, 71, 53, 43, 37, 43, 55, 60, 44, 62, 76, 105, 109, 127, 140, 185, 205, 212, 245, 293, 296],
    "90°": [9, 17, 26, 22, 49, 59, 73, 110, 142, 169, 205, 243, 238, 278, 316, 349, 401, 458, 460, 479, 521, 569, 619, 617, 661, 643, 716, 762, 770, 779, 760, 766, 838, 788, 790, 838, 753, 810, 820, 763, 763, 713, 697, 702, 679, 623, 654, 580, 563, 593, 459, 468, 415, 372, 327, 322, 293, 243, 218, 201, 139, 139, 105, 102, 75, 55, 35, 25, 20, 16, 7, 10, 13, 11, 27, 27, 36, 63, 82, 92, 124, 153, 163, 168, 223, 257, 291, 316, 330, 380, 420, 482, 529, 524, 551, 608, 570, 639, 711, 713, 687, 719, 776, 746, 805, 810, 820, 883, 871, 830, 812, 833, 808, 782, 772, 768, 714, 634, 640, 641, 638, 588, 548, 521, 485, 403, 385, 376, 345, 288, 273, 200, 199, 163, 139, 127, 86, 55, 47, 30, 18, 25, 8, 11, 9],
    "135°": [263, 225, 195, 170, 149, 131, 119, 89, 66, 62, 49, 51, 44, 33, 45, 43, 42, 47, 62, 68, 92, 108, 99, 111, 140, 170, 160, 180, 208, 243, 273, 278, 308, 326, 337, 381, 394, 405, 398, 461, 445, 481, 502, 509, 539, 529, 518, 578, 546, 525, 565, 554, 498, 535, 502, 484, 546, 529, 481, 490, 431, 443, 411, 392, 380, 342, 351, 315, 299, 308, 266, 261, 235, 217, 203, 175, 135, 135, 108, 123, 75, 73, 62, 52, 39, 48, 29, 27, 50, 37, 53, 52, 72, 75, 99, 120, 119, 147, 172, 183, 179, 205, 283, 327, 297, 306, 343, 382, 379, 444, 487, 532, 531, 491, 560, 565, 559, 584, 569, 589, 632, 627, 568, 650, 590, 656, 631, 574, 586, 548, 565, 522, 551, 497, 486, 439, 430, 412, 400, 338, 300, 267, 284, 266, 227]
}

data = pd.DataFrame(data_dict)

# Identifying intersection points (nothing)
intersections = []
columns = ["X=0", "45°", "9°", "135°"]

for i, col1 in enumerate(columns):
    for col2 in columns[i + 1:]:
        mask = data[col1] == data[col2]
        for idx in mask[mask].index:
            intersections.append((data.loc[idx, "Y"], col1, col2, data.loc[idx, col1]))

# Plotting the data
plt.figure(figsize=(14, 6))
for column in columns:
    plt.plot(data["Y"], data[column], label=f"{column}")

# Plotting intersections
for y, col1, col2, value in intersections:
    plt.scatter(y, value, label=f"Intersection: {col1} & {col2} @ ({y}, {value})", color="red")
    plt.text(y, value, f"({y}, {value})", fontsize=8, ha="right", color="blue")

# Customizing the plot
plt.title("Correlation Curve with Intersections")
plt.xlabel("Angle (degrees)")
plt.ylabel("Counts")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
